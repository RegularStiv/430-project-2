(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e};e.exports={handleError:t,sendPost:async(e,n,a)=>{const c=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),s=await c.json();s.redirect&&(window.location=s.redirect),s.error&&t(s.error),a&&a(s)}}}},t={};function n(a){var c=t[a];if(void 0!==c)return c.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,n),s.exports}(()=>{const e=io();let t;const a=n(603);let c,s;const o=n=>{n.preventDefault();const a=document.getElementById("editBox"),c=document.querySelector("#langs");if(a.value){const n={msg:a.value,lang:c.value,id:t};e.emit("chat message",n),a.value=""}},r=async e=>{e.preventDefault();const t=document.querySelector("#pass").value,n=document.querySelector("#pass2").value,c=s.csrfToken;t&&n?t!==n?document.querySelector("#messages").textContent="Passwords need to match and be longer than 1 character":(a.sendPost("/changePass",{pass:t,pass2:n,_csrf:c}),document.querySelector("#messages").textContent="Password Changed",ReactDOM.render(React.createElement(p,{csrf:s.csrfToken}),document.getElementById("content"))):document.querySelector("#messages").textContent="Passwords need to match and be longer than 1 character"},m=e=>{const t=document.createElement("div");t.innerText=e,document.getElementById("messages").appendChild(t)},l=async n=>{t=n,e.on(t,m),console.log("setuproom"),console.log(s),ReactDOM.render(React.createElement(g,{csrf:s.csrfToken}),document.getElementById("buttons"))},d=n=>{n.preventDefault(),e.emit("matchmaking",{command:"remove",id:t}),document.getElementById("messages").innerHTML="",console.log("disconnect"),console.log(s),ReactDOM.render(React.createElement(f,{csrf:s.csrfToken}),document.getElementById("buttons"))},i=n=>{n.preventDefault(),e.emit("matchmaking",{command:"reconnect",id:t})},u=e=>React.createElement("form",{id:"changePass",name:"changePass",onSubmit:r,action:"/changePass",method:"POST",className:"changePassForm"},React.createElement("label",{htmlFor:"pass"},"New Password: "),React.createElement("input",{id:"pass",type:"text",name:"pass",placeholder:"password"}),React.createElement("label",{htmlFor:"pass2"},"New Password: "),React.createElement("input",{id:"pass2",type:"text",name:"pass2",placeholder:"retype password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"change password"})),p=e=>React.createElement("form",{id:"chatForm",name:"chatForm",onSubmit:o,method:"POST",className:"chatForm"},React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("label",{htmlFor:"username"},"Message: "),React.createElement("input",{id:"editBox",type:"text"}),React.createElement("input",{type:"submit"}),React.createElement("select",{id:"langs"},React.createElement("option",{value:"en"},"English"),React.createElement("option",{value:"ru"},"Russian"),React.createElement("option",{value:"es"},"Spanish"),React.createElement("option",{value:"fr"},"French"),React.createElement("option",{value:"de"},"German"))),g=e=>React.createElement("form",{id:"disconnectForm",name:"disconnectForm",onSubmit:d,method:"POST",className:"disconnectClass"},React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Disconnect"})),f=e=>React.createElement("form",{id:"reconnectForm",name:"reconnectForm",onSubmit:i,method:"POST",className:"reconnectClass"},React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Find New Conversation"}));window.onload=async()=>{c=await fetch("/getToken"),s=await c.json(),console.log("init"),console.log(s),e.on("chat message",m),e.on("matchmaking",l),document.getElementById("changePass").addEventListener("click",(e=>(e.preventDefault(),ReactDOM.render(React.createElement(u,{csrf:s.csrfToken}),document.getElementById("content")),!1))),ReactDOM.render(React.createElement(p,{csrf:s.csrfToken}),document.getElementById("content")),ReactDOM.render(React.createElement(g,{csrf:s.csrfToken}),document.getElementById("buttons"))}})()})();